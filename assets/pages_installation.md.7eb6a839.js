import{_ as s,o as a,c as n,d as e}from"./app.bed6644f.js";const D=JSON.parse('{"title":"Installation","description":"","frontmatter":{},"headers":[{"level":2,"title":"Why do this?","slug":"why-do-this","link":"#why-do-this","children":[]},{"level":2,"title":"Cloning","slug":"cloning","link":"#cloning","children":[]},{"level":2,"title":"Node","slug":"node","link":"#node","children":[]},{"level":2,"title":"Tailwind","slug":"tailwind","link":"#tailwind","children":[]}],"relativePath":"pages/installation.md"}'),o={name:"pages/installation.md"},t=e(`<h1 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-hidden="true">#</a></h1><p>Unlike other JavaScript modules and UI libraries, Varnish is actually designed to be customized / branded / made suitable for your own projects. In that way, it is more akin to Tailwind than say Bootstrap or Vuetify. The idea, is that each time you start a project, you download Varnish and adjust it as needed.</p><h2 id="why-do-this" tabindex="-1">Why do this? <a class="header-anchor" href="#why-do-this" aria-hidden="true">#</a></h2><p>While many UI libraries release specific builds (which you then install using NPM), we believe that, in practical terms, it simply isn&#39;t the right approach for packages that provide UI components.</p><p>You will almost certainly want to add some functionality or tweak the behaviour of components to suit the needs of your application. By locking you into a specific version, that becomes impossible. Instead, we believe that you should start with a solid foundation, and then change it as needed.</p><h2 id="cloning" tabindex="-1">Cloning <a class="header-anchor" href="#cloning" aria-hidden="true">#</a></h2><p>To get started, download the repository using <code>git clone</code>.</p><p>In most cases, you will probably want to clone the repository so that it lives within a sub-folder of your application e.g.</p><div class="language-bash"><button class="copy"></button><span class="lang">bash</span><pre><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> /projects/my-app/resources</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">git clone https://github.com/caneara/varnish</span></span>
<span class="line"></span></code></pre></div><h2 id="node" tabindex="-1">Node <a class="header-anchor" href="#node" aria-hidden="true">#</a></h2><p>Even though NPM isn&#39;t managing Varnish itself, we still need to ensure that NPM can resolve the library&#39;s dependencies. To accomplish this, you will need to add Varnish to the <code>devDependencies</code> section of your <code>package.json</code> file.</p><p>Since you are using a local copy of Varnish (rather than a particular build), you will need to reference a file path rather than a version number:</p><div class="language-json"><button class="copy"></button><span class="lang">json</span><pre><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">devDependencies</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">@caneara/varnish</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">file:./resources</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"></span></code></pre></div><p>This will instruct NPM to create a symlink to this folder within <code>node_modules</code>.</p><h2 id="tailwind" tabindex="-1">Tailwind <a class="header-anchor" href="#tailwind" aria-hidden="true">#</a></h2><p>Next, you will need to instruct Tailwind&#39;s JIT compiler to recognize Varnish by adding the following path to your <code>content</code> array:</p><div class="language-js"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./node_modules/@caneara/varnish/src/components/*.vue</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div><p>For example, within your <code>tailwind.config.js</code> file:</p><div class="language-js"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">content  </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./node_modules/@caneara/varnish/src/components/*.vue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>You can now begin using Varnish. Before diving in though, be sure to review the &#39;Getting Started&#39; area of the documentation (especially the section on <a href="/pages/fonts.html">fonts</a>).</p>`,20),l=[t];function i(p,c,r,d,h,u){return a(),n("div",null,l)}const g=s(o,[["render",i]]);export{D as __pageData,g as default};
