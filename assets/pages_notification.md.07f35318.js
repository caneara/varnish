import{_ as C,o as i,h as A,w as f,c as r,a as t,n as b,e as x,T as _,m as p,r as w,b as F,d as v}from"./app.79d107b1.js";import{T as D}from"./chunks/tip.46f79318.js";import{S as h}from"./chunks/share.ee216a34.js";import{P as u}from"./chunks/prompt.a456c4fd.js";import{C as m}from"./chunks/confirm.68a9f839.js";import"./chunks/modal.c7998700.js";import"./chunks/button.706a27ad.js";import"./chunks/Foundation.9cb0dd39.js";import"./chunks/Utilities.fd907a34.js";import"./chunks/textbox.61bde5ec.js";import"./chunks/clear.803ee2a4.js";import"./chunks/error.989449da.js";import"./chunks/label.258767c1.js";import"./chunks/optional.4273cf60.js";const k={data(){return{show:this.visible,types:{info:{class:"text-blue-700 dark:text-blue-400",svg:"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"},error:{class:"text-red-700 dark:text-red-400",svg:"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z"},success:{class:"text-green-700 dark:text-green-400",svg:"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"}}}},props:{message:{type:String,default:""},type:{type:String,default:"success"},visible:{type:Boolean,default:!1}},mounted(){setTimeout(()=>this.show=!0,50),setTimeout(()=>this.show=!1,3e3)}},B={key:0,class:"varnish-notification varnish-font min-w-[250px] max-w-[350px] fixed top-[74px] right-0 z-[1002]"},T={ref:"container",class:"varnish-container bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 flex items-center shadow-sm rounded-lg relative z-[30] pl-[15px] pr-6 py-3 mr-[18px]"},E={class:"varnish-icon opacity-70 mr-3 relative top-[.5px] flex self-stretch"},S=["d"],N=["innerHTML"];function $(s,n,a,e,l,c){return i(),A(_,{"enter-to-class":"translate-x-0","leave-from-class":"translate-x-0","enter-active-class":"transition duration-500","leave-active-class":"transition duration-700","leave-to-class":"translate-x-[350px] md:translate-x-[450px]","enter-from-class":"translate-x-[350px] md:translate-x-[450px]"},{default:f(()=>[l.show?(i(),r("div",B,[t("div",T,[t("div",E,[(i(),r("svg",{width:"24",height:"24",style:{fill:"none"},viewBox:"0 0 24 24",class:b(["varnish-svg",l.types[a.type].class||""]),stroke:"currentColor"},[t("path",{"stroke-width":"2",d:l.types[a.type].svg||"","stroke-linecap":"round","stroke-linejoin":"round"},null,8,S)],2))]),t("span",{innerHTML:a.message,class:"varnish-message text-[16px] text-gray-800 dark:text-gray-300 leading-normal break-words relative top-[.5px]"},null,8,N)],512)])):x("",!0)]),_:1})}const g=C(k,[["render",$]]),q={components:{"v-confirm":m,"v-notification":g,"v-prompt":u,"v-share":h,"v-tip":D},data(){return{dialogs:[]}},methods:{createDialogElement(){let s=document.createElement("div");return s.id=`dialog-${parseInt(performance.now())}`,document.body.appendChild(s),this.dialogs.push({container:null,id:s.id}),this.dialogs.slice(-1)[0]},closeDialog(s){s.container._container._vnode.component.props.visible=!1,setTimeout(()=>{s.container.unmount(),s.container=void 0,document.body.removeChild(document.getElementById(s.id))},300)},confirm(s=null,n=null){let a=this.createDialogElement();return new Promise((e,l)=>{a.container=p(m,{summary:n??"Note that in most cases, this action is not reversible. If you need some help, then please contact support.",title:s??"Are you sure you wish to proceed?",visible:!0,onCancel:()=>{e(!1),this.closeDialog(a)},onContinue:()=>{e(!0),this.closeDialog(a)}}),a.container.mount(`#${a.id}`)})},notify(s,n){let a=this.createDialogElement();a.container=p(g,{message:n,type:s}),a.container.mount(`#${a.id}`),setTimeout(()=>this.closeDialog(a),3500)},prompt(s=null,n=null,a=null,e="",l=1,c=null){let o=this.createDialogElement();return new Promise((y,L)=>{o.container=p(u,{fallback:e,label:a??"Your response",lines:l,maxLength:c,summary:n??"In order to proceed, some input is required. Please enter it below, then press continue, or press cancel.",title:s??"Awaiting your response...",visible:!0,onCancel:()=>{y(e),this.closeDialog(o)},onContinue:d=>{y(["",null,void 0].includes(d)?e:d),this.closeDialog(o)}}),o.container.mount(`#${o.id}`)})},share(s){let n=this.createDialogElement();n.container=p(h,{url:s,visible:!0}),n.container.mount(`#${n.id}`)},tip(s=""){let n=this.createDialogElement();n.container=p(D,{message:s,visible:!0,onClose:()=>this.closeDialog(n)}),n.container.mount(`#${n.id}`)}}},I={mixins:[q]},P={class:"flex flex-col gap-3"};function V(s,n,a,e,l,c){return i(),r("div",P,[t("button",{onClick:n[0]||(n[0]=o=>s.notify("info","An info notification")),class:"bg-sky-700 text-white px-3 py-1 rounded-md"}," Show Info Notification "),t("button",{onClick:n[1]||(n[1]=o=>s.notify("success","A success notification")),class:"bg-emerald-700 text-white px-3 py-1 rounded-md"}," Show Success Notification "),t("button",{onClick:n[2]||(n[2]=o=>s.notify("error","An error notification")),class:"bg-red-700 text-white px-3 py-1 rounded-md"}," Show Error Notification ")])}const j=C(I,[["render",V]]),z=v('<h1 id="notification" tabindex="-1">Notification <a class="header-anchor" href="#notification" aria-hidden="true">#</a></h1><p>A context notification component that can be used to provide additional options.</p><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-hidden="true">#</a></h2><ul><li>Simple configuration using an <code>array</code></li><li>Supports hiding or showing certain notification options</li><li>Supports separators to &#39;group&#39; related notification options</li><li>Automatic orientation to prevent items being cut off at the edge of the browser</li></ul><h2 id="demo" tabindex="-1">Demo <a class="header-anchor" href="#demo" aria-hidden="true">#</a></h2><p>You can use the toggle at the top right of the page to switch between light and dark-modes. Owing to its simplicity, no component playground is provided.</p>',6),M={class:"bg-gray-100 dark:bg-black rounded-md p-6 mt-8"},O=v(`<h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h2><blockquote><p>While you are free to use the approach below, you are probably looking for the <a href="#inlining">inline option</a> which does not require adding components to a template.</p></blockquote><p>Begin by importing the component and registering it like so:</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">v-notification</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">v-notification</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> NotificationComponent </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@caneara/varnish/src/components/notification.vue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#FFCB6B;">components</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">v-notification</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> : </span><span style="color:#A6ACCD;">NotificationComponent</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-hidden="true">#</a></h2><p>The following <code>props</code> are exposed by the component.</p><h3 id="message" tabindex="-1">message <a class="header-anchor" href="#message" aria-hidden="true">#</a></h3><ul><li>Type: <code>String</code></li><li>Default: <code>&#39;&#39;</code></li></ul><p>The text to display when the notification is visible.</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">v-notification</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">message</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Nothing Here</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">v-notification</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="type" tabindex="-1">type <a class="header-anchor" href="#type" aria-hidden="true">#</a></h3><ul><li>Type: <code>Enum (String)</code></li><li>Default: <code>&#39;success&#39;</code></li><li>Options: <code>&#39;info&#39;</code>, <code>&#39;success&#39;</code>, <code>&#39;error&#39;</code></li></ul><p>The icon and color scheme to use for the notification.</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">v-notification</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">info</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">v-notification</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="visible" tabindex="-1">visible <a class="header-anchor" href="#visible" aria-hidden="true">#</a></h3><ul><li>Type: <code>Boolean</code></li><li>Default: <code>false</code></li></ul><p>Specify whether the component should be visible to the user.</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">v-notification</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:visible</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">true</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">v-notification</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="inlining" tabindex="-1">Inlining <a class="header-anchor" href="#inlining" aria-hidden="true">#</a></h2><p>It can be cumbersome to have to add the component everywhere that you want to use it, which is why an inline option is available that allows you to simply call a method and have Varnish take care of the rest.</p><p>To achieve this, first add the <code>Dialog</code> mixin to your component:</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Dialog </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@caneara/varnish/src/mixins/Dialog</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">mixins</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span><span style="color:#A6ACCD;">Dialog</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>Then call the <code>notify</code> method provided by the mixin.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#82AAFF;">deleteAccount</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">notify</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">success</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Your account has been deleted</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">},</span></span>
<span class="line"></span></code></pre></div><p>The <code>notify</code> method accepts two parameters, which are used to set the <a href="#type">type</a> and <a href="#message">message</a> properties of the component.</p><h2 id="custom-styling" tabindex="-1">Custom styling <a class="header-anchor" href="#custom-styling" aria-hidden="true">#</a></h2><p>If you want to override any of the component&#39;s default styling, then you can do so by using the following CSS selectors:</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">varnish-notification</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">varnish-notification</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">varnish-container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">varnish-notification</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">varnish-container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">varnish-icon</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">varnish-notification</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">varnish-container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">varnish-icon</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">varnish-svg</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">varnish-notification</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">varnish-container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">varnish-message</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>Here&#39;s an example that changes the message text color to purple:</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">varnish-notification</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">varnish-container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">varnish-message</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> @apply text-purple-700 dark</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">text-purple-400 </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><blockquote><p>Be sure to use the full selector path when overriding any styles. That way, any changes will be scoped to the component in question.</p></blockquote>`,31),os=JSON.parse('{"title":"Notification","description":"","frontmatter":{},"headers":[{"level":2,"title":"Features","slug":"features","link":"#features","children":[]},{"level":2,"title":"Demo","slug":"demo","link":"#demo","children":[]},{"level":2,"title":"Usage","slug":"usage","link":"#usage","children":[]},{"level":2,"title":"Properties","slug":"properties","link":"#properties","children":[{"level":3,"title":"message","slug":"message","link":"#message","children":[]},{"level":3,"title":"type","slug":"type","link":"#type","children":[]},{"level":3,"title":"visible","slug":"visible","link":"#visible","children":[]}]},{"level":2,"title":"Inlining","slug":"inlining","link":"#inlining","children":[]},{"level":2,"title":"Custom styling","slug":"custom-styling","link":"#custom-styling","children":[]}],"relativePath":"pages/notification.md"}'),H={name:"pages/notification.md"},ts=Object.assign(H,{setup(s){return(n,a)=>{const e=w("ClientOnly");return i(),r("div",null,[z,t("div",M,[F(e,null,{default:f(()=>[F(j)]),_:1})]),O])}}});export{os as __pageData,ts as default};
