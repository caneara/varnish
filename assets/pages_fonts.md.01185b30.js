import{_ as s,o as t,c as n,d as o}from"./app.bed6644f.js";const y=JSON.parse('{"title":"Fonts","description":"","frontmatter":{},"headers":[{"level":2,"title":"Setting a custom font","slug":"setting-a-custom-font","link":"#setting-a-custom-font","children":[]}],"relativePath":"pages/fonts.md"}'),e={name:"pages/fonts.md"},a=o(`<h1 id="fonts" tabindex="-1">Fonts <a class="header-anchor" href="#fonts" aria-hidden="true">#</a></h1><p>By default, Tailwind CSS uses a font stack that defers to the operating system&#39;s interface font e.g. &#39;San Francisco&#39; for macOS, &#39;Segoe UI&#39; for Windows etc. This has two major benefits for your site&#39;s visitors:</p><ul><li>Text resembles the native OS look and feel.</li><li>The browser does not have to download custom web fonts.</li></ul><p>Varnish is designed and built around this same philosophy, which means that if you use the default Tailwind font stack, then everything will look and work fine.</p><p>However, if you&#39;re using a different font on your site and you want Varnish to use it too, then you will need to configure Varnish to use a custom font...</p><h2 id="setting-a-custom-font" tabindex="-1">Setting a custom font <a class="header-anchor" href="#setting-a-custom-font" aria-hidden="true">#</a></h2><p>Varnish adds a blank <code>varnish-font</code> CSS class to each component. You can use this (in your main CSS file) to assign your chosen font:</p><div class="language-css"><button class="copy"></button><span class="lang">css</span><pre><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">varnish-font</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#B2CCD6;">font-family</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Inter</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,8),i=[a];function l(r,c,p,d,f,h){return t(),n("div",null,i)}const _=s(e,[["render",l]]);export{y as __pageData,_ as default};
