import{_ as e,o as s,c as a,d as o}from"./app.6d7a3a69.js";const y=JSON.parse('{"title":"Foundation","description":"","frontmatter":{},"headers":[{"level":2,"title":"Properties","slug":"properties"},{"level":3,"title":"autocomplete","slug":"autocomplete"},{"level":3,"title":"error","slug":"error"},{"level":3,"title":"icon","slug":"icon"},{"level":3,"title":"id","slug":"id"},{"level":3,"title":"label","slug":"label"},{"level":3,"title":"optional","slug":"optional"},{"level":3,"title":"optionalText","slug":"optionaltext"},{"level":3,"title":"placeholder","slug":"placeholder"},{"level":3,"title":"v-model","slug":"v-model"},{"level":2,"title":"Events","slug":"events"},{"level":3,"title":"change","slug":"change"}],"relativePath":"pages/foundation.md"}'),n={name:"pages/foundation.md"},l=o(`<h1 id="foundation" tabindex="-1">Foundation <a class="header-anchor" href="#foundation" aria-hidden="true">#</a></h1><p>Many Varnish components make use of a <code>Foundation</code> mixin, which provides a minimal set of <code>properties</code> and <code>events</code>.</p><p>This shared API enables you to perform common tasks, such as setting a component&#39;s ID, or listening for changes to the component&#39;s state.</p><blockquote><p>Components rarely use every feature in the mixin. Instead, they use the functionality that is relevant to them. You are therefore encouraged to dig into the <code>.vue</code> files to see which parts are being used.</p></blockquote><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-hidden="true">#</a></h2><p>The following <code>props</code> are exposed by the mixin.</p><h3 id="autocomplete" tabindex="-1">autocomplete <a class="header-anchor" href="#autocomplete" aria-hidden="true">#</a></h3><ul><li>Type: <code>String</code></li><li>Default: <code>&#39;off&#39;</code></li></ul><p>The auto-complete value used by the component.</p><p>A complete list of possible values is <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete#values" target="_blank" rel="noopener noreferrer">available here</a> (courtesy of MDN).</p><div class="language-html"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">v-component</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">autocomplete</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">given-name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">v-component</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="error" tabindex="-1">error <a class="header-anchor" href="#error" aria-hidden="true">#</a></h3><ul><li>Type: <code>String</code></li><li>Default: <code>&#39;&#39;</code></li></ul><p>The error message that the component should display.</p><p>When left blank, no message is shown and any padding &amp; spacing is removed.</p><div class="language-html"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">v-component</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">First name is required</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">v-component</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="icon" tabindex="-1">icon <a class="header-anchor" href="#icon" aria-hidden="true">#</a></h3><ul><li>Type: <code>String</code></li><li>Default: <code>&#39;&#39;</code></li></ul><p>The FontAwesome icon to display within the component&#39;s label.</p><p>When left blank, no icon is shown and any padding &amp; spacing is removed.</p><div class="language-html"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">v-component</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">icon</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">fas fa-user</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">v-component</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="id" tabindex="-1">id <a class="header-anchor" href="#id" aria-hidden="true">#</a></h3><ul><li>Type: <code>String</code></li><li>Default: <code>&#39;&#39;</code></li></ul><p>The identifier used by the component. If left blank, <code>window.performance.now</code> is used to generate a unique identifier using the format <code>id-{number}</code>.</p><p>When the component serves as a wrapper for an <code>input</code> or other HTML element that could be used within a <code>form</code>, it will also be assigned to the <code>name</code> attribute.</p><div class="language-html"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">v-component</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">first_name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">v-component</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="label" tabindex="-1">label <a class="header-anchor" href="#label" aria-hidden="true">#</a></h3><ul><li>Type: <code>String</code></li><li>Default: <code>&#39;Label&#39;</code></li></ul><p>The text used for the component&#39;s label.</p><p>When left blank, any padding and spacing is removed.</p><div class="language-html"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">v-component</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">label</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">First name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">v-component</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="optional" tabindex="-1">optional <a class="header-anchor" href="#optional" aria-hidden="true">#</a></h3><ul><li>Type: <code>Boolean</code></li><li>Default: <code>false</code></li></ul><p>Specify whether the component is optional or not.</p><div class="language-html"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">v-component</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:optional</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">true</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">v-component</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="optionaltext" tabindex="-1">optionalText <a class="header-anchor" href="#optionaltext" aria-hidden="true">#</a></h3><ul><li>Type: <code>String</code></li><li>Default: <code>&#39;Optional&#39;</code></li></ul><p>Specify the text that an associated optional component should display.</p><div class="language-html"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">v-component</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">optionalText</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Not Required</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">v-component</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="placeholder" tabindex="-1">placeholder <a class="header-anchor" href="#placeholder" aria-hidden="true">#</a></h3><ul><li>Type: <code>String</code></li><li>Default: <code>&#39;&#39;</code></li></ul><p>Set the default placeholder text to display when the component is empty.</p><div class="language-html"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">v-component</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">placeholder</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Escribe algo incre\xEDble...</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">v-component</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="v-model" tabindex="-1">v-model <a class="header-anchor" href="#v-model" aria-hidden="true">#</a></h3><ul><li>Type: <code>String</code>, <code>Number</code> or <code>Boolean</code></li><li>Default: <code>&#39;&#39;</code></li></ul><p>The two-way, data-bound value used by the component.</p><div class="language-html"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">v-component</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-model</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">user.first_name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">v-component</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-hidden="true">#</a></h2><p>The following <code>events</code> are exposed by the mixin.</p><h3 id="change" tabindex="-1">change <a class="header-anchor" href="#change" aria-hidden="true">#</a></h3><ul><li><code>$event</code> - revised value.</li></ul><p>Fired when the component&#39;s value changes.</p><p>Note that, in many cases, you can rely on the two-way data-binding provided by <code>v-model</code> for this. However, if you need to react to changes, this is the best way.</p><div class="language-html"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">v-component</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">@change</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">console.log($event)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">v-component</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div>`,54),t=[l];function p(c,r,i,d,h,F){return s(),a("div",null,t)}var u=e(n,[["render",p]]);export{y as __pageData,u as default};
