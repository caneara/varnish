import{E as l}from"./chunks/error.bf782a7b.js";import{d as n,o,c as t,a as r,e as s,w as p,f as e}from"./app.65403d2d.js";import"./chunks/Utilities.fd907a34.js";const i=e('<h1 id="error" tabindex="-1">Error <a class="header-anchor" href="#error" aria-hidden="true">#</a></h1><p>An error message component used to indicate the presence of a problem (usually in a parent component) e.g. after failing form validation.</p><blockquote><p>This is a sub-component and is not really intended for direct use as-is. If you&#39;re only intending to use Varnish&#39;s &#39;full&#39; components e.g. a TextBox or DropDown, then you can skip this section. However, if you want to augment Varnish with your own components, then you can make use of it if you wish.</p></blockquote><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-hidden="true">#</a></h2><ul><li>Automatically hides and shows itself</li><li>Scrolls the viewport to ensure it is visible</li><li>Allows for delayed scrolling using the <code>setTimeout</code> function</li><li>Includes a &#39;before scrolling&#39; hook to execute arbitrary JavaScript</li></ul><h2 id="demo" tabindex="-1">Demo <a class="header-anchor" href="#demo" aria-hidden="true">#</a></h2><p>You can use the toggle at the top right of the page to switch between light and dark-modes.</p>',7),c={class:"bg-gray-100 dark:bg-black flex justify-center rounded-md p-6 mt-8"},d=e(`<h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h2><p>Begin by importing the component and registering it like so:</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">v-error</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">v-error</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> ErrorComponent </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@caneara/varnish/src/components/error.vue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#FFCB6B;">components</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">v-error</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> : </span><span style="color:#A6ACCD;">ErrorComponent</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-hidden="true">#</a></h2><p>The following <code>props</code> are exposed by the component.</p><h3 id="beforescroll" tabindex="-1">beforeScroll <a class="header-anchor" href="#beforescroll" aria-hidden="true">#</a></h3><ul><li>Type: <code>Function</code></li><li>Default: <code>null</code></li></ul><p>The closure to run prior to the component scrolling the browser.</p><p>For example, you might want to close any open modals first (as they might sit on top of the error, thereby hiding it from the user).</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">v-error</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:beforeScroll</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">() =&gt; closeModals()</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">v-error</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="scrolldelay" tabindex="-1">scrollDelay <a class="header-anchor" href="#scrolldelay" aria-hidden="true">#</a></h3><ul><li>Type: <code>Number</code></li><li>Default: <code>0</code></li></ul><p>The milliseconds to wait before the component scrolls the browser.</p><p>A common scenario where you might want to use this, is if the page takes time to re-render. If the browser attempts to scroll too soon, then it might end up at the wrong place (and the user won&#39;t see the error). This is particularly likely if you are using <code>beforeScroll</code> in a way that manipulates the DOM.</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">v-error</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:scrollDelay</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">100</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">v-error</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="value" tabindex="-1">value <a class="header-anchor" href="#value" aria-hidden="true">#</a></h3><ul><li>Type: <code>String</code></li><li>Default: <code>&#39;&#39;</code></li></ul><p>The error message that should be displayed.</p><p>If it is set to a non-empty string, then the component will be visible. If it is set to either <code>&#39;&#39;</code>, <code>null</code> or <code>undefined</code>, then it will automatically hide itself.</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">v-error</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">value</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Something went wrong...</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">v-error</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="automatic-scrolling" tabindex="-1">Automatic scrolling <a class="header-anchor" href="#automatic-scrolling" aria-hidden="true">#</a></h2><p>When the component is assigned a value, it will check to see if it is the first visible instance on the page. If it is, then it will automatically adjust the browser&#39;s scroll position so that the user will see the (first) error.</p><h2 id="custom-styling" tabindex="-1">Custom styling <a class="header-anchor" href="#custom-styling" aria-hidden="true">#</a></h2><p>If you want to override any of the component&#39;s default styling, then you can do so by using the following CSS selector:</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">varnish-error</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>Here&#39;s an example that changes the text color to purple:</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">varnish-error</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> @apply text-purple-700 dark</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">text-purple-400 </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><blockquote><p>Be sure to use the full selector path when overriding any styles. That way, any changes will be scoped to the component in question.</p></blockquote>`,28),f=JSON.parse('{"title":"Error","description":"","frontmatter":{},"headers":[{"level":2,"title":"Features","slug":"features","link":"#features","children":[]},{"level":2,"title":"Demo","slug":"demo","link":"#demo","children":[]},{"level":2,"title":"Usage","slug":"usage","link":"#usage","children":[]},{"level":2,"title":"Properties","slug":"properties","link":"#properties","children":[{"level":3,"title":"beforeScroll","slug":"beforescroll","link":"#beforescroll","children":[]},{"level":3,"title":"scrollDelay","slug":"scrolldelay","link":"#scrolldelay","children":[]},{"level":3,"title":"value","slug":"value","link":"#value","children":[]}]},{"level":2,"title":"Automatic scrolling","slug":"automatic-scrolling","link":"#automatic-scrolling","children":[]},{"level":2,"title":"Custom styling","slug":"custom-styling","link":"#custom-styling","children":[]}],"relativePath":"pages/error.md"}'),h={name:"pages/error.md"},b=Object.assign(h,{setup(y){return(u,D)=>{const a=n("ClientOnly");return o(),t("div",null,[i,r("div",c,[s(a,null,{default:p(()=>[s(l,{value:"This is a test error"})]),_:1})]),d])}}});export{f as __pageData,b as default};
